version: "3.9"

services:
  api1: &api
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api1
    environment:
      - DEFAULT_CONNECTION=Host=db;Username=local_user;Password=local_password;Database=local_db;Minimum Pool Size=10;Maximum Pool Size=10;Multiplexing=true;
    depends_on:
      - db
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.30"
          memory: "50MB"

  api2:
    <<: *api
    environment:
      - DEFAULT_CONNECTION=Host=db;Username=local_user;Password=local_password;Database=local_db;Pooling=true;Minimum Pool Size=10;Maximum Pool Size=10;Multiplexing=true;
    container_name: api2

  db:
    image: "postgres:16.0-alpine3.18"
    env_file:
      - .env
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      # - ./postgresql.conf:/etc/postgresql/postgresql.conf
    # command: postgres -c config_file=/etc/postgresql/postgresql.conf
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096 -c synchronous_commit=0 -c fsync=0 -c full_page_writes=0
    deploy:
      resources:
        limits:
          cpus: "0.75"
          memory: "440MB"

  # haproxy:
  #   image: haproxy:2.9-alpine
  #   volumes:
  #     - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
  #   depends_on:
  #     - api1
  #     - api2
  #   ports:
  #     - 9999:9999
  #   restart: unless-stopped
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "0.2"
  #         memory: "30MB"

  nginx:
    image: nginx:1.21-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - 9999:9999
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "10MB"

networks:
  default:
    driver: bridge
    name: rinha-2024
